# git

#распределенная система контроля версий (система, записывающая изменения в файле или наборе файлов).
# Используется для отслеживания и ведения истори изменения файлов и позволяет вернуть старую версию


# GIT HUB
'''онлайн сервис'''


            ########################################COMANDS TO SEND TO GITHUB###############################################

'git init = Вводится только 1 раз. Превращает директорию в git репозиторий (инициализируете директорию и появляется скрытая директория .git)'

'git add .(все содержимое директории)/ <filename> (конкретный файл git add test.py index.html) - отслеживание файлов или файлов гитом'

'git commit -m "message" - создание commit с комментарием сохранение в git(локально на компе)'

'git remote add origin ссылка_на_удаленный_репозиторий(HTTPS/SSH) - связывает локальную директорию и удаленный репозиторий '

'git push <название_связи> <название_ветки> (master/main) - отправка версий кода на удаленный репозиторий т.е на github'

'''
КОМАНДЫ ПРИ ПОВТОРНОЙ ОТПРАВКЕ НА GITHUB(КОГДА МЫ ИЗМЕНИЛИ ФАЙЛЫ)
# GIT ADD . 
# GIT COMMIT -M 'MESSAGE'
# GIT PUSH ORIGIN MASTER
'''
'''
ДОПОЛНИТЕЛЬНЫЕ КОМАНДЫ

GIT LOG - ПРОСМОТР ЖУРНАЛА С КОММИТАМИ

GIT CHECKOUT  - 'HASH_COMMIT'  - ПЕРЕКЛЮЧЕНИЕ К ДРУГОЙ ВЕРСИИ КОДА (КОММИТА)

GIT STATUS - ПРОВЕРКА СТАТУСВ ФАЙЛОВ

GIT PULL <НАЗВАНИЕ_ВЕТКИ> СТЯГИВАЕМ ИЗМЕНЕНИЯ С УДАЛЕННОГО РЕПОЗИТОРИЯ, С УКАЗАННОЙ ВЕТКИ (ДОБАВИТЬ ЛОКАЛЬНЫЕ ФАЙЛЫ ИЗМЕНЕНИЯ С GITHUB)

GIT CLONE <ССЫЛКА_НА_УДАЛЕННЫЙ_РЕПОЗИТОИЙ> - КОПИРОВАНИЕ КЛОНИРОВАНИЕ УДАЛЕННОГО РЕПОЗИТОРИЯ
'''
